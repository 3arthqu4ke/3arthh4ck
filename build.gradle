buildscript {
    repositories {
        //noinspection JCenterRepository
        jcenter()
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            name = "jitpack.io"
            url = "https://jitpack.io"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'com.formdev:flatlaf:1.5'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
// TODO: double check if there's forge methods we missed with vanilla source
// apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

mainClassName = "me.earth.earthhack.installer.main.Main"
group project.modGroup //http://maven.apache.org/guides/mini/guide-naming-conventions.html
project.version = '1.5.2'

boolean VANILLA = false
//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    //noinspection GroovyAssignabilityCheck
    version = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpVersion
    makeObfSourceJar = false
    // tweakClass = 'me.earth.earthhack.tweaker.EarthhackTweaker'
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven'
    }

    maven {
        name = "jitpack.io"
        url  = "https://jitpack.io"
    }

    mavenCentral()
    google()

    /*maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }*/
    /*maven {
        url = 'https://oss.sonatype.org/content/repositories/releases/'
    }*/
}

dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    /*compile('org.languagetool:language-en:5.4') {
        exclude module: 'guava'
    }*/
    // compile group: 'org.languagetool', name: 'language-en', version: '5.4'
    /*compile('org.languagetool:languagetool-core:5.4') {
        exclude module: 'guava'
    }*/
    compile group: 'club.minnced', name: 'java-discord-rpc', version: '2.0.1'
    compile group: 'com.formdev', name: 'flatlaf', version: '1.5'
    // compile group: 'org.l33tlabs.twl', name: 'pngdecoder', version: '1.0'
    compile group: 'org.slick2d', name: 'slick2d-core', version: '1.0.2'
    compile group: 'org.joml', name: 'joml', version: '1.10.2'
    compile group: 'us.ihmc', name: 'jassimp', version: '4.0.0-ihmc6'
    compile group: 'us.ihmc', name: 'ihmc-native-library-loader', version: '1.3.1'
    compile group: 'com.github.stephengold', name: 'Libbulletjme', version: '12.5.0'
    compile group: 'de.fabmax', name: 'physx-jni', version: '0.4.15'
    compile group: 'de.fabmax', name: 'physx-jni', version: '0.4.15:native-win64'

    compile group: 'net.java.dev.jna', name: 'jna', version: '5.8.0'
    compile group: 'net.java.dev.jna', name: 'jna-platform', version: '5.8.0'

    compile group: 'com.badlogicgames.gdx', name: 'gdx', version: '1.10.0'
    compile group: 'com.badlogicgames.gdx', name: 'gdx-bullet', version: '1.10.0'
    compile group: 'com.badlogicgames.gdx', name: 'gdx-backend-lwjgl', version: '1.10.0'
    compile "com.badlogicgames.gdx:gdx-platform:1.10.0:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-bullet-platform:1.10.0:natives-desktop"

}


task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        //noinspection GroovyAssignabilityCheck
        // include(dependency('org.languagetool:languagetool-core'))
        // include(dependency('org.languagetool:language-en'))
        include(dependency('org.spongepowered:mixin'))
        include(dependency('club.minnced:java-discord-rpc:2.0.1'))
        include(dependency('club.minnced:discord-rpc-release:v3.3.0'))
        include(dependency('com.formdev:flatlaf:1.5'))
        // include(dependency('org.l33tlabs.twl:pngdecoder:1.0'))
        include(dependency('org.slick2d:slick2d-core'))

        // include(dependency('com.github.dabasan:jassimp'))
        // include(dependency(files('libs/assimp4j.jar')))
        include(dependency('org.joml:joml'))
        include(dependency('us.ihmc:jassimp'))
        include(dependency('us.ihmc:ihmc-native-library-loader'))
        include(dependency('org.apache.commons:commons-lang3'))
        /* Below this line is stuff necessary for unfinished stuff on my local branch. */
        include(dependency('com.github.stephengold:Libbulletjme'))
        include(dependency('de.fabmax:physx-jni'))
        include(dependency('com.badlogicgames.gdx:gdx-backend-lwjgl'))
        include(dependency('com.badlogicgames.gdx:gdx'))
        include(dependency('com.badlogicgames.gdx:gdx-bullet'))
        include(dependency('com.badlogicgames.gdx:gdx-platform'))
        include(dependency('com.badlogicgames.gdx:gdx-bullet-platform'))

        include(dependency('net.java.dev.jna:jna'))
        include(dependency('net.java.dev.jna:jna-platform'))

        // include(dependency(files('libs/patched-lwjgl.jar')))
        // include(dependency('org.lwjgl:lwjgl-assimp'))
        // include(dependency('org.lwjgl:lwjgl'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'release'
}

mixin {
    defaultObfuscationEnv searge
    //noinspection GroovyAssignabilityCheck
    add sourceSets.main, 'mixins.earth.refmap.json'
}

reobf {
    shadowJar {
        mappingType = VANILLA ? 'NOTCH' : 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
            'Manifest-Version': 1.0,
            'TweakClass': 'me.earth.earthhack.tweaker.EarthhackTweaker',
            'TweakOrder': -999,
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true',
            'Main-Class': mainClassName
        )
    }
}

build.dependsOn(shadowJar)